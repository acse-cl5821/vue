{"remainingRequest":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\45040\\Downloads\\nx-admin\\src\\router\\index.js","dependencies":[{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\src\\router\\index.js","mtime":1680916512429},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\babel.config.js","mtime":1675193736546},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}