{"remainingRequest":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\45040\\Downloads\\nx-admin\\src\\views\\login\\userlogin.vue?vue&type=template&id=0ddf142e&","dependencies":[{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\src\\views\\login\\userlogin.vue","mtime":1680916509592},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\45040\\Downloads\\nx-admin\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uICgpIHsKICB2YXIgX3ZtID0gdGhpcwogIHZhciBfaCA9IF92bS4kY3JlYXRlRWxlbWVudAogIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaAogIHJldHVybiBfYygKICAgICJlbC1mb3JtIiwKICAgIHsKICAgICAgcmVmOiAibG9naW5Gb3JtIiwKICAgICAgc3RhdGljQ2xhc3M6ICJsb2dpbi1mb3JtIiwKICAgICAgYXR0cnM6IHsKICAgICAgICAic3RhdHVzLWljb24iOiAiIiwKICAgICAgICBydWxlczogX3ZtLmxvZ2luUnVsZXMsCiAgICAgICAgbW9kZWw6IF92bS5sb2dpbkZvcm0sCiAgICAgICAgImxhYmVsLXdpZHRoIjogIjAiLAogICAgICB9LAogICAgfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgImVsLWZvcm0taXRlbSIsCiAgICAgICAgeyBhdHRyczogeyBwcm9wOiAidXNlcm5hbWUiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImVsLWlucHV0IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBzaXplOiAic21hbGwiLAogICAgICAgICAgICAgICAgImF1dG8tY29tcGxldGUiOiAib2ZmIiwKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl55So5oi35ZCNIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgICBrZXl1cDogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgISRldmVudC50eXBlLmluZGV4T2YoImtleSIpICYmCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCAiZW50ZXIiLCAxMywgJGV2ZW50LmtleSwgIkVudGVyIikKICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZUxvZ2luKCRldmVudCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5sb2dpbkZvcm0udXNlcm5hbWUsCiAgICAgICAgICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gKCQkdikgewogICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0ubG9naW5Gb3JtLCAidXNlcm5hbWUiLCAkJHYpCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImxvZ2luRm9ybS51c2VybmFtZSIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uLXlvbmdodSIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAicHJlZml4IiB9LAogICAgICAgICAgICAgICAgc2xvdDogInByZWZpeCIsCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJlbC1mb3JtLWl0ZW0iLAogICAgICAgIHsgYXR0cnM6IHsgcHJvcDogImJyYW5jaG5hbWUiIH0gfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgImVsLWlucHV0IiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICBzaXplOiAic21hbGwiLAogICAgICAgICAgICAgICAgImF1dG8tY29tcGxldGUiOiAib2ZmIiwKICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiAi6K+36L6T5YWl5YiG5bqX5ZCNIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgICBrZXl1cDogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgISRldmVudC50eXBlLmluZGV4T2YoImtleSIpICYmCiAgICAgICAgICAgICAgICAgICAgX3ZtLl9rKCRldmVudC5rZXlDb2RlLCAiZW50ZXIiLCAxMywgJGV2ZW50LmtleSwgIkVudGVyIikKICAgICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZUxvZ2luKCRldmVudCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgdmFsdWU6IF92bS5sb2dpbkZvcm0uYnJhbmNobmFtZSwKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7CiAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5sb2dpbkZvcm0sICJicmFuY2huYW1lIiwgJCR2KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJsb2dpbkZvcm0uYnJhbmNobmFtZSIsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgWwogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uLXlvbmdodSIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAicHJlZml4IiB9LAogICAgICAgICAgICAgICAgc2xvdDogInByZWZpeCIsCiAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgIF0KICAgICAgICAgICksCiAgICAgICAgXSwKICAgICAgICAxCiAgICAgICksCiAgICAgIF92bS5fdigiICIpLAogICAgICBfYygiYnIiKSwKICAgICAgX3ZtLl92KCIgIiksCiAgICAgIF9jKAogICAgICAgICJlbC1mb3JtLWl0ZW0iLAogICAgICAgIHsgYXR0cnM6IHsgcHJvcDogInBhc3N3b3JkIiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJlbC1pbnB1dCIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgc2l6ZTogInNtYWxsIiwKICAgICAgICAgICAgICAgIHR5cGU6IF92bS5wYXNzd29yZFR5cGUsCiAgICAgICAgICAgICAgICAiYXV0by1jb21wbGV0ZSI6ICJvZmYiLAogICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICLor7fovpPlhaXlr4bnoIEiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbmF0aXZlT246IHsKICAgICAgICAgICAgICAgIGtleXVwOiBmdW5jdGlvbiAoJGV2ZW50KSB7CiAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICAhJGV2ZW50LnR5cGUuaW5kZXhPZigia2V5IikgJiYKICAgICAgICAgICAgICAgICAgICBfdm0uX2soJGV2ZW50LmtleUNvZGUsICJlbnRlciIsIDEzLCAkZXZlbnQua2V5LCAiRW50ZXIiKQogICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uaGFuZGxlTG9naW4oJGV2ZW50KQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIG1vZGVsOiB7CiAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmxvZ2luRm9ybS5wYXNzd29yZCwKICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7CiAgICAgICAgICAgICAgICAgIF92bS4kc2V0KF92bS5sb2dpbkZvcm0sICJwYXNzd29yZCIsICQkdikKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAibG9naW5Gb3JtLnBhc3N3b3JkIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoImkiLCB7CiAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogImVsLWljb24tdmlldyBlbC1pbnB1dF9faWNvbiIsCiAgICAgICAgICAgICAgICBhdHRyczogeyBzbG90OiAic3VmZml4IiB9LAogICAgICAgICAgICAgICAgb246IHsgY2xpY2s6IF92bS5zaG93UGFzc3dvcmQgfSwKICAgICAgICAgICAgICAgIHNsb3Q6ICJzdWZmaXgiLAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgIF92bS5fdigiICIpLAogICAgICAgICAgICAgIF9jKCJpIiwgewogICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJpY29uLW1pbWEiLAogICAgICAgICAgICAgICAgYXR0cnM6IHsgc2xvdDogInByZWZpeCIgfSwKICAgICAgICAgICAgICAgIHNsb3Q6ICJwcmVmaXgiLAogICAgICAgICAgICAgIH0pLAogICAgICAgICAgICBdCiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfdm0uX3YoIiAiKSwKICAgICAgX2MoCiAgICAgICAgImVsLWZvcm0taXRlbSIsCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJlbC1idXR0b24iLAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJsb2dpbi1zdWJtaXQiLAogICAgICAgICAgICAgIGF0dHJzOiB7IHR5cGU6ICJwcmltYXJ5Iiwgc2l6ZTogInNtYWxsIiB9LAogICAgICAgICAgICAgIG5hdGl2ZU9uOiB7CiAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkgewogICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLmhhbmRsZUxvZ2luKCRldmVudCkKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgfSwKICAgICAgICAgICAgW192bS5fdigi55m75b2VIildCiAgICAgICAgICApLAogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgXSwKICAgIDEKICApCn0KdmFyIHN0YXRpY1JlbmRlckZucyA9IFtdCnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZQoKZXhwb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfQ=="}]}